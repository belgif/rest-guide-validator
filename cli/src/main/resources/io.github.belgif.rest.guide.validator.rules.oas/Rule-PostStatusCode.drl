package io.github.belgif.rest.guide.validator.rules.oas;

import org.eclipse.microprofile.openapi.models.PathItem.HttpMethod;
import org.eclipse.microprofile.openapi.models.OpenAPI;
import io.github.belgif.rest.guide.validator.core.ApiFunctions;
import io.github.belgif.rest.guide.validator.core.ViolationReport;
import io.github.belgif.rest.guide.validator.core.model.OperationDefinition;
import org.eclipse.microprofile.openapi.models.Operation;
import org.eclipse.microprofile.openapi.models.responses.APIResponses;
import org.eclipse.microprofile.openapi.models.responses.APIResponse;
import java.util.Set;

global io.github.belgif.rest.guide.validator.core.ViolationReport oas;

function void violationPost(ViolationReport oas, OperationDefinition operation, String code){
    oas.addViolation("[stat-codes]", "POST operation should not have this status code", "[statuscode: " + code + "]",
                     operation);
}

rule "Post Status Code 304"
	when
		$operation: OperationDefinition( method == HttpMethod.POST)
		OperationDefinition($response: /model/responses/APIResponses[keySet contains "304"]) from $operation
	then
        violationPost(oas, $operation, "304");
end