openapi: 3.0.1
info:
  title: PresenceOfPayloadFailingOpenApi
  version: '1.0'
servers:
  - url: '/api/v1'
paths:
  /everythingIsGoodHere:
    get:
      summary: This path is completely compliant with the guidelines
      description: Nice path
      operationId: getEverythingIsGoodHere
      responses:
        '200':
          description: Very good 200
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotAProblem'
        204:
          description: A 204 response
        default:
          $ref: '#/components/responses/ProblemResponse'
    head:
      summary: head summary
      operationId: headOperation
      parameters:
        - name: group
          in: path
          required: true
          schema:
            type: string
      responses:
        default:
          description: Default response description without payload.
    delete:
      summary: delete summary
      operationId: deleteOperation
      responses:
        default:
          $ref: '#/components/responses/ProblemResponse'
    post:
      summary: post
      operationId: post
      responses:
        default:
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/NotAProblem'
components:
  schemas:
    NotAProblem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: An absolute URI that identifies the problem type
          default: about:blank  # kept for backwards-compatibility, type will be mandatory in problem-v2
        href:
          type: string
          format: uri
          description: An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML).
        title:
          type: string
          description: A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
      example:
        {
          "type": "urn:problem-type:belgif:payloadTooLarge",
          "href": "https://www.belgif.be/specification/rest/api-guide/problems/payloadTooLarge.html", # location of linked doc will change in the future to recommended URI structure
          "title": "Payload Too Large",
          "status": 413,
          "detail": "Request message must not be larger than 10 MB",
          "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000",
          "limit": 10485760  # additional properties specific to the problem type are allowed
        }
  responses:
    ProblemResponse:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/NotAProblem"
      description: a problem